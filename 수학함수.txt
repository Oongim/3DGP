
Float PlaneDot 어떤 점에서 평면까지의 거리

PlaneNormalize(a,b,c 법선은 단위벡터여야한다, 정규화 되어야 성립)

PlaneIntersectLine(두 점을 주고 평면을 주면 두 점을 지나는 직선이 평면과 교점이 있으면 리턴)

TransformCoord(점,행렬 , 점을 행렬로 변환해서 반환,3차원 벡터로 바꿈) 점

transformNormal(방향 벡터)

vec3form(4차원 벡터를 주면 4차원으로 반환)

Vec3Project(모델 좌표계 넘김)
UnProject(역변환)


10p
1. 로켓이 원하는 방향으로는 회전 안함 자전, Translation 함수로 바로 값을 대입해서 넣어서 초기화가 됨

2. Movement 행렬이 아닌 원래 위치가 있어서 더 많이 이동됨, 더큰문제(W1=M*R*W0, 공전으로 됨 화면에 안보이게 됨,무브하고 회전이여서)

3. W*R*T로 되어서 여전히 공전문제

4. 3번이랑 똑같

5. 15씩 잘 돌면서 움직임

6. R*T0*T1 이여서 잘 됨
======================
D3D는 실제 안씀 예전버전
=====================

13p
29
각도 반환 내적 스칼라 멤버가 XMVector로 받으면 4개가 모두 같은 값이 들어갈 것이다 0.000..까지 재야할때

est: 0,2,3  빠르게 간단

cross 외적










충돌 구조체
바운딩 박스
AABB(access aliend? bb)정렬된 바운딩 박스=중심과 거리만 사용해서 간단하지만 회전을 못해서 회전하면 크기가 커져야 됨

OBB(OrientedBoundingBox) float4-쿼터니언 회전정보,점마다 회전해서 그릴 수 있음 연산이 복잡

바운딩스피어= 구로 근사, 센터 반지름, 방향이 없음 둥글둥글 굴러다니는 거

바운딩프로스텀- 보통 카메라 절두체로 씀




43p
enum PlaneIntersection Type
프론트 앞
인터셋팅 걸쳐 있
백 뒤


==============================
바운딩박스AABB
--------
ContainmentType

containedBy(리턴 데이타 타입은 containmentType 안만났냐, 걸쳤냐, 포함되어있느냐),plane 6개 -> 절두체
	BoundingBax a;
	a.containedBy(...)
	a.Contains(...)
Contains(point-이 점이 박스 안에 있는가,삼각형,원이 포함 되어있는가)
--------
static

createfrompoints( 주소 값으로 점들을 넘기고, stride로 한 객체마다 크기로 해서 다음의 점을 찾을 수 있게 함)
createMerged(바운딩 박스 두개를 합쳐서 더 크게 만듬)
---------
bool

ContainmentType은 3개의 결과를 얻을 수 있고
Intersects는 두개만 겹쳤는지 안겹쳤는지만 쫌더 빠름 인터섹트,컨테인 둘다 True


Intersects(원점,목적지,거리)충돌이 있으면 거리를 리턴해줌-벡터의 오리진에 거리를 더해서 충돌 점을 구할 수 있음
---
GetCorners()바운딩 박스의 점 8개를 줘봐
---
Transform()- 매트릭스가 필요,점 매트릭스를 주면 바운딩 박스를 트랜스폼 해줌(센터와 거리를 트랜스폼을 해줌,AABB면 회전시 거리가 바뀜 항상 평행해야 하니까)
====================
OBB도 AABB랑 비슷
====================
절두체
생성자(projection)  frustum 컬링이 가능


바운딩 박스의 extent=모서리 점 벡터로 넣어줘도 됨 (2,2,2)


근접점
PointOnLineSegmentNearestPoint()- 선분에서 가장 가까운 점을 찾아줌, 양끝점 혹은 선분과 점이 수직이 되는 선분위의 점
